# Simple Dockerfile for XTTS API Server (without DeepSpeed)
# Use this if the production build fails

FROM nvidia/cuda:11.8.0-cudnn8-runtime-ubuntu22.04

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    python3.11 \
    python3.11-distutils \
    python3-pip \
    portaudio19-dev \
    libsndfile1 \
    ffmpeg \
    espeak-ng \
    git \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Set Python 3.11 as default
RUN update-alternatives --install /usr/bin/python python /usr/bin/python3.11 1 && \
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.11 1

# Upgrade pip
RUN pip install --upgrade pip setuptools wheel

# Set working directory
WORKDIR /app

# Copy requirements and install dependencies
COPY requirements.txt .

# Install PyTorch with CUDA 11.8 support
RUN pip install torch==2.1.1+cu118 torchaudio==2.1.1+cu118 --index-url https://download.pytorch.org/whl/cu118

# Install other dependencies (excluding DeepSpeed)
RUN pip install -r requirements.txt

# Copy application code
COPY xtts_api_server/ ./xtts_api_server/
COPY example/ ./example/

# Create necessary directories
RUN mkdir -p /app/speakers /app/output /app/xtts_models && \
    chmod -R 777 /app/speakers /app/output /app/xtts_models

# Environment variables
ENV CUDA_VISIBLE_DEVICES=0
ENV TORCH_CUDA_ARCH_LIST="7.5;8.0;8.6"
ENV DEVICE=cuda
ENV MODEL_SOURCE=local
ENV MODEL_VERSION=v2.0.2
ENV USE_CACHE=true
ENV DEEPSPEED=false

# Expose the API port
EXPOSE 8020

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD python -c "import requests; requests.get('http://localhost:8020/languages').raise_for_status()" || exit 1

# Run the server
CMD ["python", "-m", "xtts_api_server", \
     "--host", "0.0.0.0", \
     "--port", "8020", \
     "--device", "cuda", \
     "--use-cache"]